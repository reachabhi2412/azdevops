#Checks for an environment variable
if [[ $USER != 'ubuntu' ]];then
	echo "Hello $USER"
else
	echo "Bye"
fi

--------------------------------------

#Checks if file is present

if [ -f "/user/home/ubuntu/README.md" ]; then
    echo "The file exists"
else
    echo "The file does not exist"
fi

--------------------------------------

#Prints the docker image names
images=$(docker images | awk '{print $1}')
for i in $images;do
        echo "IMAGE NAME - $i"
done

--------------------------------------

#Check if user input number is greater than 100
echo "Enter a number:"
read num
if [ $num -gt 100 ]; then
    echo "Number is greater than 10"
else
    echo "Number is 10 or less"
fi

--------------------------------------

#Check input filename extension

echo "Enter filename:"
read file

case $file in
    *.txt)
        echo "This is a text file."
        ;;
    *.jpg | *.png)
        echo "This is an image file."
        ;;
    *.sh)
        echo "This is a shell script."
        ;;
    *)
        echo "Unknown file type."
        ;;
esac
-----------------------------------------

#Switch case usage example

echo "Enter command: (start/stop/restart/status)"
read action

case $action in
    start)
        docker start my_container
        ;;
    stop)
        docker stop my_container
        ;;
    restart)
        docker restart my_container
        ;;
    status)
        docker ps -f "name=my_container"
        ;;
    *)
        echo "Usage: start | stop | restart | status"
        ;;
esac
------------------------------------------

#Arrays

#!/bin/bash
fruits=("Apple" "Banana" "Cherry")

echo "First fruit: ${fruits[0]}"  # Apple
echo "All fruits: ${fruits[@]}"   # Apple Banana Cherry
echo "Second fruit: ${fruits[1]}"  # Banana

# Add Mango to the array
fruits+=("Mango")  
echo "Updated Fruits: ${fruits[@]}"  # Apple Banana Cherry Mango

#Find array length
echo "Number of fruits: ${#fruits[@]}"  # 3
#remove item
unset fruits[1]  
echo "After removal: ${fruits[@]}"  # Apple Cherry Mango


-----------------------------------------
#Maps or assiciative arrays

#!/bin/bash
declare -A user #declares user array as an associative(A)
user[name]="Alice"
user[age]=25
user[city]="New York"

echo "Name: ${user[name]}"
echo "Age: ${user[age]}"
-----------------------------------------
# FOr loop another example

#!/bin/bash

containers=("nginx" "mysql" "redis")

for container in "${containers[@]}"; do
    echo "Starting container: $container"
    docker start "$container"
done





